#pragma checksum "D:\Дела\От Александра Овчинникова\Админка\WebAdmin\WebAdmin\Pages\Accounts\Accounts.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c8790fdc257fe8bfc38bd92b567edd81a51d8a5c"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace WebAdmin.Pages.Accounts
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Дела\От Александра Овчинникова\Админка\WebAdmin\WebAdmin\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Дела\От Александра Овчинникова\Админка\WebAdmin\WebAdmin\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Дела\От Александра Овчинникова\Админка\WebAdmin\WebAdmin\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Дела\От Александра Овчинникова\Админка\WebAdmin\WebAdmin\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Дела\От Александра Овчинникова\Админка\WebAdmin\WebAdmin\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Дела\От Александра Овчинникова\Админка\WebAdmin\WebAdmin\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Дела\От Александра Овчинникова\Админка\WebAdmin\WebAdmin\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Дела\От Александра Овчинникова\Админка\WebAdmin\WebAdmin\_Imports.razor"
using WebAdmin;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\Дела\От Александра Овчинникова\Админка\WebAdmin\WebAdmin\_Imports.razor"
using WebAdmin.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Дела\От Александра Овчинникова\Админка\WebAdmin\WebAdmin\Pages\Accounts\Accounts.razor"
using CwAuthorizationService.Dto;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Дела\От Александра Овчинникова\Админка\WebAdmin\WebAdmin\Pages\Accounts\Accounts.razor"
using CwAuthorizationService.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Дела\От Александра Овчинникова\Админка\WebAdmin\WebAdmin\Pages\Accounts\Accounts.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Дела\От Александра Овчинникова\Админка\WebAdmin\WebAdmin\Pages\Accounts\Accounts.razor"
using System.Net.Http.Headers;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/accounts")]
    public partial class Accounts : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 51 "D:\Дела\От Александра Овчинникова\Админка\WebAdmin\WebAdmin\Pages\Accounts\Accounts.razor"
       
    private string _message;
    private TokenDto token = new TokenDto();
    private AccountDto[] accountsDto;

    protected override async Task OnInitializedAsync()
    {
        var result = await GetAccounts();
        accountsDto = result.ToArray();
    }

    private void GoToNewAccountPage()
    {
        Navigate.NavigateTo($"/newaccount");
    }

    private void GoToAccountEditPage(AccountDto accountDto)
    {
        CurrentAccount.Id = accountDto.Id;
        CurrentAccount.Name = accountDto.Name;
        CurrentAccount.Role = accountDto.Role;
        CurrentAccount.Description = accountDto.Description;
        Navigate.NavigateTo($"/accountedit");
    }

    private async Task DeleteAccount(AccountDto accountDto)
    {
        try
        {
            CurrentAccount.Id = accountDto.Id;
            CurrentAccount.Name = accountDto.Name;
            CurrentAccount.Role = accountDto.Role;
            CurrentAccount.Description = accountDto.Description;
            string account = JsonConvert.SerializeObject(CurrentAccount);
            HttpRequestMessage httpRequestMessage = new HttpRequestMessage();
            httpRequestMessage.Method = new HttpMethod("DELETE");
            httpRequestMessage.RequestUri = new Uri($"http://localhost:6060/api/Account/id={CurrentAccount.Id}");
            httpRequestMessage.Headers.Add("Authorization", "Bearer " + UserToken.Jwt);
          
            var response = await Http.SendAsync(httpRequestMessage);
            var responseStatusCode = response.StatusCode;
            var responseBody = await response.Content.ReadAsStringAsync();

            if (responseStatusCode == System.Net.HttpStatusCode.OK)
            {
                _message = "Account is Deleted successfuly!";
            }
            else
            {
                _message = responseStatusCode.ToString();
            }
        }
        catch (Exception e)
        {
            _message = e.Message;
        }
    }

    private async Task<List<AccountDto>> GetAccounts()
    {
        List<AccountDto> accountDtos = null;
        try
        {
            HttpRequestMessage httpRequestMessage = new HttpRequestMessage();
            httpRequestMessage.Method = new HttpMethod("GET");
            httpRequestMessage.RequestUri = new Uri("http://localhost:6060/api/Account/Current");
            httpRequestMessage.Headers.Add("Authorization", "Bearer " + UserToken.Jwt);

            var response = await Http.SendAsync(httpRequestMessage);
            var responseStatusCode = response.StatusCode;
            var responseBody = await response.Content.ReadAsStringAsync();

            if (responseStatusCode.ToString() == "OK")
            {
                accountDtos = JsonConvert.DeserializeObject<IEnumerable<AccountDto>>(responseBody).ToList();
                _message = "Accounts updated successfuly";
            }
            else
            {

            }

        }
        catch (Exception e)

        {
            _message = e.Message;
        }
        return accountDtos;




    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AccountDto CurrentAccount { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private CwAuthorizationService.Dto.TokenDto UserToken { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager Navigate { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
